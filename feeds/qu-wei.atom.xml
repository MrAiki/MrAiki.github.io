<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Aiki's Blog - 趣味</title><link href="/" rel="alternate"></link><link href="/feeds/qu-wei.atom.xml" rel="self"></link><id>/</id><updated>2020-11-22T22:00:00+09:00</updated><entry><title>麻雀プログラミング</title><link href="/ma-que-puroguramingu.html" rel="alternate"></link><published>2020-11-14T12:00:00+09:00</published><updated>2020-11-22T22:00:00+09:00</updated><author><name>aiki</name></author><id>tag:None,2020-11-14:/ma-que-puroguramingu.html</id><summary type="html">&lt;p&gt;秋口あたりから麻雀のプログラミングにハマっているフシがある。
すこし成果がまとまってきたので記事にしてみよう。&lt;/p&gt;
&lt;p&gt;なんと言っても、&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://web.archive.org/web/20190402234201/http://cmj3.web.fc2.com/index.htm"&gt;麻雀C言語プログラム集&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;がきっかけだし、これがweb魚拓しか残っていないことに危機感を覚えた。シャンテン数計算と役計算は実装したい。あと有効牌判定。
そこから簡単なシミュレータ作って実験までできればいいなあと思うところ。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;お役立ちリンク&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;他の有名な？プロジェクト&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://ja.osdn.net/projects/openmahjong/"&gt;オープン麻雀プロジェクト(仮称)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/mahjong-server/mahjong-server/tree/master/tsumogiri"&gt;mahjong-serverのクライアント実装例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.logos.t.u-tokyo.ac.jp/~mizukami/"&gt;爆打の中の人&lt;/a&gt; ちゃんと研究に落とし込んでいる方。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.amy.hi-ho.ne.jp/ishihata/maujong/"&gt;まうじゃん的空間&lt;/a&gt; フリーでプレーヤーを自前実装できる「まうじゃん」の配布サイト。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;アルゴリズム全般&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://ksta.skr.jp/topic/diaryb15.html#20101230"&gt;気まぐれな戯れ言 バックナンバー１５&lt;/a&gt; 役判定アルゴリズムの概要がつかめる。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hp.vector.co.jp/authors/VA046927/mjscore/mjalgorism.html"&gt;麻雀 和了判定（役の判定） アルゴリズム&lt;/a&gt; バックトラック法とインデックスを用いた約判定アルゴリズムについて。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://mahjong.org/training/training_006/"&gt;牌理/牌効率ツール&lt;/a&gt; 有効牌列挙の動作確認に。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;数理的側面&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www10.plala.or.jp/rascalhp/mjmath.htm"&gt;麻雀の数学&lt;/a&gt; 組み合わせの議論。乱数xorshiftじゃ周期が足りないことに気づく。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jankenso.com/dataroom.asp"&gt;雀賢荘データ室&lt;/a&gt; 強い打ち手の統計情報の要約&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id6"&gt;
&lt;h4&gt;乱数について&lt;/h4&gt;
&lt;p&gt;端的に言って沼。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://programming-place.net/ppp/contents/algorithm/other/002.html"&gt;ランダムシャッフル | Programming Place Plus&lt;/a&gt; ランダムシャッフルのやり方。Fisher-Yates法を使いましょう。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://cafeunder.github.io/rosenblock-chainers-blog/2018/03/02/shuffle_array.html"&gt;配列のシャッフルコードの間違った実装&lt;/a&gt; 実装を誤ると痛い目に合う。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;一様乱数の作り方一つとっても落とし穴がある …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;秋口あたりから麻雀のプログラミングにハマっているフシがある。
すこし成果がまとまってきたので記事にしてみよう。&lt;/p&gt;
&lt;p&gt;なんと言っても、&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://web.archive.org/web/20190402234201/http://cmj3.web.fc2.com/index.htm"&gt;麻雀C言語プログラム集&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;がきっかけだし、これがweb魚拓しか残っていないことに危機感を覚えた。シャンテン数計算と役計算は実装したい。あと有効牌判定。
そこから簡単なシミュレータ作って実験までできればいいなあと思うところ。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;お役立ちリンク&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;他の有名な？プロジェクト&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://ja.osdn.net/projects/openmahjong/"&gt;オープン麻雀プロジェクト(仮称)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/mahjong-server/mahjong-server/tree/master/tsumogiri"&gt;mahjong-serverのクライアント実装例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.logos.t.u-tokyo.ac.jp/~mizukami/"&gt;爆打の中の人&lt;/a&gt; ちゃんと研究に落とし込んでいる方。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.amy.hi-ho.ne.jp/ishihata/maujong/"&gt;まうじゃん的空間&lt;/a&gt; フリーでプレーヤーを自前実装できる「まうじゃん」の配布サイト。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;アルゴリズム全般&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://ksta.skr.jp/topic/diaryb15.html#20101230"&gt;気まぐれな戯れ言 バックナンバー１５&lt;/a&gt; 役判定アルゴリズムの概要がつかめる。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hp.vector.co.jp/authors/VA046927/mjscore/mjalgorism.html"&gt;麻雀 和了判定（役の判定） アルゴリズム&lt;/a&gt; バックトラック法とインデックスを用いた約判定アルゴリズムについて。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://mahjong.org/training/training_006/"&gt;牌理/牌効率ツール&lt;/a&gt; 有効牌列挙の動作確認に。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;数理的側面&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www10.plala.or.jp/rascalhp/mjmath.htm"&gt;麻雀の数学&lt;/a&gt; 組み合わせの議論。乱数xorshiftじゃ周期が足りないことに気づく。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jankenso.com/dataroom.asp"&gt;雀賢荘データ室&lt;/a&gt; 強い打ち手の統計情報の要約&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id6"&gt;
&lt;h4&gt;乱数について&lt;/h4&gt;
&lt;p&gt;端的に言って沼。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://programming-place.net/ppp/contents/algorithm/other/002.html"&gt;ランダムシャッフル | Programming Place Plus&lt;/a&gt; ランダムシャッフルのやり方。Fisher-Yates法を使いましょう。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://cafeunder.github.io/rosenblock-chainers-blog/2018/03/02/shuffle_array.html"&gt;配列のシャッフルコードの間違った実装&lt;/a&gt; 実装を誤ると痛い目に合う。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;一様乱数の作り方一つとっても落とし穴がある。。。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://takeda25.hatenablog.jp/entry/20130818/1376837093"&gt;いつからその方法で偏りのない乱数が得られると錯覚していた？&lt;/a&gt; まず読みましょう。そして、偏らない乱数を出すためには、以下の実装で行く必要があるようです。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;uniform_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;adjusted_max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RAND_MAX&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RAND_MAX&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;adjusted_max&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(((&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;adjusted_max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;乱数範囲をnの倍数で切り捨ててから、実数の一様乱数にキャストする。剰余は下位ビットの偏りに影響を受けるからNG。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.albow.net/entry/random-range"&gt;C言語/C++で範囲を指定した乱数を生成する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://omitakahiro.github.io/random/random_variables_generation.html#Uniform"&gt;C言語による乱数生成&lt;/a&gt; 注意点は、剰余による一様乱数は偏りが出るということか。例えばRAND_MAX=10でrand()%3して0,1,2の乱数を作ろうとすると、0は0,3,6,9、1は1,4,7,10、2は2,5,8だから偏る。解決法としては、[0,1]の浮動小数点乱数を作ってから整数化する方法が奥村先生のアルゴリズム本含め推奨されていた。→**よくない**&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www001.upp.so-net.ne.jp/isaku/rand.html"&gt;良い乱数・悪い乱数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blog.visvirial.com/articles/575"&gt;Google Chromeが採用した、擬似乱数生成アルゴリズム「xorshift」の数理&lt;/a&gt; &lt;a class="reference external" href="https://admiswalker.blogspot.com/2018/06/marsaglia-g-2003-xorshift-rngs.html"&gt;論文の紹介と検証：Marsaglia, G. 2003. Xorshift RNGs.&lt;/a&gt; XorShiftの分かりやすい解説。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.timbreofprogram.info/blog/archives/384"&gt;乱数ライブラリを更新してみた&lt;/a&gt; XorShiftの初期値のとり方。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://prng.di.unimi.it"&gt;xoshiro / xoroshiro&lt;/a&gt; 統計的により望ましい乱数列を出すアルゴリズム。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ai"&gt;
&lt;h3&gt;AI（プレーヤー）について&lt;/h3&gt;
&lt;p&gt;プレーヤーは間違いなくインターフェースとして実装すべきで、転用を考えて、他の有名なものと互換性のある形に実装しておきたい。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.amy.hi-ho.ne.jp/ishihata/maujong/iface.html"&gt;「まうじゃん」対戦相手プラグイン　インターフェース仕様&lt;/a&gt; C/C++版の解説。そうか、プレーヤーがゲーム側に問い合わせる状態取得インターフェースもいるな。&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.amy.hi-ho.ne.jp/ishihata/maujong/java/javadoc/current/jp/gr/java_conf/ishihata/mj_ai/package-summary.html"&gt;まうじゃんのインターフェース仕様&lt;/a&gt; Java版の解説&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.nicovideo.jp/watch/sm21043481"&gt;[麻雀]コンピュータで鳳凰卓を目指すpart1[天鳳]&lt;/a&gt; 最初はシャンテン数を減らすことだけ考える。次はベタオリ、次は鳴き。取っ掛かりにはかなり良さそう。&lt;/li&gt;
&lt;li&gt;まうじゃんAI:&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.amy.hi-ho.ne.jp/ishihata/maujong/plugin.html"&gt;対戦相手プラグインの部屋&lt;/a&gt; まうじゃんの対戦相手のプラグイン集。強いことで有名な「アカギ」がいる。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://maurato.blog.fc2.com/blog-entry-1.html"&gt;まうじゃん対戦相手プラグイン「しぐま０」v1.00公開&lt;/a&gt; アカギよりちょっと強い打ち手。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;牌譜について&lt;/h3&gt;
&lt;p&gt;可能であれば牌譜出力にも対応できたほうが良い（AIがどんな挙動してるか見える）&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blog.kobalab.net/entry/20151228/1451228689"&gt;電脳麻将の牌譜形式&lt;/a&gt; jsonで独自だが可読性に優れていそう。&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://web.archive.org/web/20190403121158/http://mj.giganet.net/mjscore.htm"&gt;mjscore.txtの書式について&lt;/a&gt; シンプルで可読性あるけど日本語ガッツリ入ってるのでパースに苦戦しそう&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;麻雀用語の英語&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://perceptualmahjong.blog.ss-blog.jp/2010-10-08"&gt;英語の麻雀用語集・表現集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://crescent.s255.xrea.com/cabinet/others/mahjong/"&gt;麻雀用語英名一覧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blog.kobalab.net/entry/20170722/1500688645"&gt;電脳麻将のプログラム中の中国語一覧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="趣味"></category><category term="麻雀"></category><category term="向聴数"></category><category term="得点計算"></category></entry></feed>